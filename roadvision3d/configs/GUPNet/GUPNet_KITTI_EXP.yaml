dataset:
  type: 'kitti'
  data_dir: '/home/javier/datasets/kitti'
  label_dir: '/home/javier/datasets/kitti/training/label_2'
  # split_dir : '/home/javier/pytorch/splits/KITTI_reduced'
  split_dir: '/home/javier/datasets/kitti/ImageSets'
  eval_cls: ['Car','Pedestrian','Cyclist']
  batch_size: 24
  num_workers: 16
  class_merging: False
  use_dontcare: False
  use_3d_center: True
  writelist: ['Car','Pedestrian','Cyclist']
  random_flip: 0.5
  random_crop: 0.5
  random_mix: 0
  scale: 0.4
  shift: 0.1
  drop_last_val: False
  cls_mean_size: [[1.52563191, 1.6285674,  3.8831164 ],
                  [1.76255119, 0.66068622, 0.84422524],
                  [1.73698127, 0.59706367, 1.76282397]]
  cls_num: 3
  max_objs: 50
  resolution: [1280, 384]
  mean: [0.485, 0.456, 0.406]
  std: [0.229, 0.224, 0.225]
  downsample: 4

model:
  type: 'GUPNet'
  backbone: 'dla34'
  neck: 'DLAUp'
  head: 'GUPNetHead'
  loss: 'asfd'
  downsample: 4
  loss_weight: [10., 5.]
  depth_ref: [28.01, 16.32]


# optimizer:
#   type: 'adam'
#   lr: 0.001
#   weight_decay: 0.00001

optimizer:
  type: 'adam'
  lr: 0.0009375 # 0.0009375 #0.00125
  weight_decay: 0.00001

lr_scheduler:
  warmup: True  # 5 epoches, cosine warmup, init_lir=0.00001 in default
  decay_rate: 0.1
  # decay_list: [240, 360, 480]
  decay_list: [90, 120]

trainer:
  max_epoch: 140
  eval_start: 10
  eval_frequency: 10 # evaluation interval (in epoch)
  save_frequency: 70 # checkpoint save interval (in epoch)
  disp_frequency: 10 # display interval (in batch)
  log_dir: 'work_dirs/GUPNet_KITTI_150e_EXP/logs/'
  out_dir: 'work_dirs/GUPNet_KITTI_150e_EXP/output/'
  resume_model: ''

tester:
  threshold: 0.2  # confidence filter
  top_k: 50  # max number of boxes
  out_dir: './GUPNet_KITTI_150e_EXP/testset_out'
  resume_model: '' # pre-trained model path


wandb:
  name: "GUPNet_KITTI_150e_EXP"
  notes: "GUPNet experimental trained on KITTI during 150e"